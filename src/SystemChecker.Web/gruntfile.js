/// <binding BeforeBuild='build' ProjectOpened='default' />
/*
This file in the main entry point for defining grunt tasks and using grunt plugins.
Click here to learn more. http://go.microsoft.com/fwlink/?LinkID=513275&clcid=0x409
*/
module.exports = function (grunt) {
    // load Grunt plugins from NPM
    require('load-grunt-tasks')(grunt);
    
    grunt.loadNpmTasks('grunt-sass');
    grunt.loadNpmTasks('grunt-autoprefixer');
    grunt.loadNpmTasks('grunt-contrib-watch');
    grunt.loadNpmTasks('grunt-contrib-concat');
    grunt.loadNpmTasks('grunt-contrib-uglify');
    grunt.loadNpmTasks('grunt-string-replace');
    grunt.loadNpmTasks('grunt-jslint');
    grunt.loadNpmTasks('grunt-contrib-htmlmin');

    // configure plugins
    grunt.initConfig({

        pkg: grunt.file.readJSON('package.json'),

        jslint: { // configure the task
            // lint your project's server code
            server: {
                src: [ // some example files
                  'Scripts/**/*.js'
                ],

                exclude: [
                  //'server/config.js'
                ],
                directives: { // example directives
                    node: true,
                    todo: true
                },
                options: {
                    edition: 'latest', // specify an edition of jslint or use 'dir/mycustom-jslint.js' for own path
                    junit: 'out/server-junit.xml', // write the output to a JUnit XML
                    log: 'out/server-lint.log',
                    jslintXml: 'out/server-jslint.xml',
                    errorsOnly: false, // only display errors
                    failOnError: false, // defaults to true
                    checkstyle: 'out/server-checkstyle.xml' // write a checkstyle-XML
                }
            }
        },

        concat: {
            options: {
                separator: '\n\r',
                banner: '/*! <%= pkg.author %> - <%= pkg.name %> - <%= grunt.template.today("dd-mm-yyyy") %>*/ \n\n/*IMPORTANT! This code was generated by a tool. Changes to this file may cause incorrect behavior and will be lost if the code is regenerated. */\n',
            },

            'app-js': {
                src: [
                    'Angular/app.js',
                    'Angular/Shared/Helpers/**/*.js',
                    'Angular/Shared/Directives/**/*.js',
                    'Angular/Controllers/**/*.js',
                ],
                dest: 'wwwroot/app.js'
            },

            'lib-js': {
                src: [
                    'wwwroot/lib/angular/angular*.min.js',
                    'wwwroot/lib/angular-route/angular-route.min.js',
                    'wwwroot/lib/angular-resource/angular-resource.min.js',
                    'wwwroot/lib/angular-ui-select/dist/select.min.js',
                ],
                dest: 'wwwroot/lib.js'
            },

            'lib-css': {
                src: [
                    'wwwroot/lib/bootstrap/dist/css/bootstrap.min.css',
                    'wwwroot/lib/angular-ui-select/dist/select.min.css'
                ],
                dest: 'wwwroot/lib.css'
            }
        },

        uglify: {
            
            build: {
                options: {
                    //  banner for inserting at the top of the result
                    banner: '/*! <%= pkg.author %> - <%= pkg.name %> - <%= grunt.template.today("dd-mm-yyyy") %>*/ \n/*IMPORTANT! This code was generated by a tool. Changes to this file may cause incorrect behavior and will be lost if the code is regenerated. */\n',
                    mangle: {
                        except: []
                    },
                    sourceMap: true,
                    compress: {
                        drop_console: true
                    }
                },
                src: ['wwwroot/app.js'],
                dest: 'wwwroot/app.min.js'
            }

        },

        htmlmin: {                                     
            build: {
                options: {
                    removeComments: true,
                    collapseWhitespace: true
                },
                files: grunt.file.expandMapping(['Angular/**/*.html', 'Angular/**/*.html'], 'wwwroot/', {})
            }
        },

        watch: {
            scripts: {
                files: ['Angular/**/*.js'],
                tasks: ['concat:app-js', 'uglify']
            },
            htmls: {
                files: ['Angular/**/*.html'],
                tasks: ['htmlmin:build']
            }
        }
    });

    // define tasks
    grunt.registerTask('default', ['watch']);
    grunt.registerTask('build', ['concat:app-js', 'concat:lib-js', 'concat:lib-css', 'uglify:build', 'htmlmin:build']);
};